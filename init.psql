drop table battery_charge_data;
drop table battery_discharge_data;
drop table battery_cycle;
drop table battery_battery;

CREATE TABLE battery_battery
(
    battery_id INT GENERATED BY DEFAULT AS IDENTITY,
    m_name VARCHAR(250),
    CONSTRAINT pk_battery_battery PRIMARY KEY (battery_id),
    CONSTRAINT unique_battery_battery UNIQUE (m_name)
);

CREATE TABLE battery_cycle (
    cycle_id INT GENERATED BY DEFAULT AS IDENTITY,
    battery_cycle_number INT,
    battery_id INT,
    ambient_temperature NUMBER,
    cycle_type VARCHAR(250),
    pct_rul NUMBER,
    CONSTRAINT pk_battery_cycle PRIMARY KEY (cycle_id),
    CONSTRAINT fk_battery_cycle_id FOREIGN KEY (battery_id) REFERENCES battery_battery (battery_id) ON DELETE CASCADE,
    CONSTRAINT unique_battery_cycle UNIQUE (battery_id, battery_cycle_number, cycle_type)
);

CREATE TABLE battery_charge_data (
    charge_data_id INT GENERATED BY DEFAULT AS IDENTITY,
    cycle_id INT,
    current_charge NUMBER,
    current_measured NUMBER,
    temperature_measured NUMBER,
    voltage_charge NUMBER,
    voltage_measured NUMBER,
    m_time NUMBER,
    CONSTRAINT pk_battery_charge_data PRIMARY KEY (charge_data_id),
    CONSTRAINT fk_cycle_charge_data_id FOREIGN KEY (cycle_id) REFERENCES battery_cycle (cycle_id) ON DELETE CASCADE,
    CONSTRAINT unique_battery_charge_data UNIQUE (current_charge, current_measured, temperature_measured, voltage_charge, voltage_measured)
);

CREATE TABLE battery_discharge_data (
    discharge_data_id INT GENERATED BY DEFAULT AS IDENTITY,
    cycle_id INT,
    current_load NUMBER,
    current_measured NUMBER,
    temperature_measured NUMBER,
    voltage_load NUMBER,
    voltage_measured NUMBER,
    m_time NUMBER,
    m_capacity NUMBER,
    CONSTRAINT pk_battery_discharge_data PRIMARY KEY (discharge_data_id),
    CONSTRAINT fk_cycle_discharge_data_id FOREIGN KEY (cycle_id) REFERENCES battery_cycle (cycle_id) ON DELETE CASCADE,
    CONSTRAINT unique_battery_discharge_data UNIQUE (current_load, current_measured, temperature_measured, voltage_load, voltage_measured)
);
